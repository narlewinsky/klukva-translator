{"version":3,"sources":["media/logo.svg","media/copy.svg","media/export.svg","media/clear.svg","Board.js","App.js","reportWebVitals.js","index.js"],"names":["Board","props","handleChange","e","content","target","value","translation","latinize","document","querySelector","scrollTop","scrollHeight","setState","clear","upload","export","blob","Blob","state","type","saveAs","onCopy","console","log","bind","className","id","placeholder","onChange","this","onClick","src","ClearIcon","ExportIcon","text","CopyIcon","Component","App","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uOAAe,G,YAAA,IAA0B,kC,2ECA1B,MAA0B,iCCA1B,MAA0B,mCCA1B,MAA0B,kC,OC8F1BA,E,kDApFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,aAAe,SAACC,GACZ,IAAMC,EAAUD,EAAEE,OAAOC,MACnBC,EAAcC,IAASL,EAAEE,OAAOC,OAEtCG,SAASC,cAAc,WAAWC,UAAYF,SAASC,cAAc,WAAWE,aAEhF,EAAKC,SAAS,CACVT,QAASA,EACTG,YAAaA,KAjBF,EAqBnBO,MAAQ,SAACX,GACLM,SAASC,cAAc,UAAUJ,MAAQ,GACzCG,SAASC,cAAc,WAAWJ,MAAQ,IAvB3B,EA0BnBS,OAAS,SAACZ,KA1BS,EA8BnBa,OAAS,SAACb,GACN,IAAIc,EAAO,IAAIC,KAAK,CAAC,EAAKC,MAAMZ,aAAc,CAACa,KAAM,6BACrDC,iBAAOJ,EAAM,oBAhCE,EAmCnBK,OAAS,SAACnB,GACNoB,QAAQC,IAAI,+BAlCZ,EAAKtB,aAAe,EAAKA,aAAauB,KAAlB,gBACpB,EAAKN,MAAQ,CACTf,QAAS,GACTG,YAAa,IALF,E,0CAuCnB,WACI,OACI,sBAAKmB,UAAU,QAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,0BAAUA,UAAU,wBACVC,GAAG,QACHC,YAAY,yKACZC,SAAUC,KAAK5B,iBAE7B,qBAAKwB,UAAU,0BACf,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,wBAAQA,UAAU,qBAAqBK,QAASD,KAAKhB,MAArD,SACI,qBAAKY,UAAU,OAAOM,IAAKC,aAK3C,qBAAKP,UAAU,gBACf,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,0BAAUA,UAAU,wBACVC,GAAG,SACHrB,MAAOwB,KAAKX,MAAMZ,gBAEhC,qBAAKmB,UAAU,0BACf,qBAAKA,UAAU,sBAAf,SACI,sBAAKA,UAAU,0BAAf,UACI,wBAAQA,UAAU,qBAAqBK,QAASD,KAAKd,OAArD,SACI,qBAAKU,UAAU,OAAOM,IAAKE,MAE/B,cAAC,kBAAD,CAAiBZ,OAAQQ,KAAKR,OAAQa,KAAML,KAAKX,MAAMZ,YAAvD,SACI,wBAAQmB,UAAU,qBAAlB,SACI,qBAAKA,UAAU,OAAOM,IAAKI,uB,GA1E3CC,aCWLC,MAhBf,WACI,OACI,sBAAKZ,UAAU,MAAf,UACI,qBAAKA,UAAU,eACf,qBAAKA,UAAU,OAAOM,IAAKO,IAC3B,qBAAKb,UAAU,SAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,8DACA,yPAGR,cAAC,EAAD,QCHGc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJ1C,SAAS2C,eAAe,SAM5BZ,M","file":"static/js/main.c572ab57.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3abb1590.svg\";","export default __webpack_public_path__ + \"static/media/copy.7232b27a.svg\";","export default __webpack_public_path__ + \"static/media/export.f0ae1084.svg\";","export default __webpack_public_path__ + \"static/media/clear.960a9a98.svg\";","import './Board.css';\nimport React, { Component } from 'react';\nimport latinize from 'klukva-core';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { saveAs } from 'file-saver';\nimport CopyIcon from './media/copy.svg';\nimport ExportIcon from './media/export.svg';\nimport ClearIcon from './media/clear.svg';\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            content: \"\",\n            translation: \"\"\n        }\n    }\n\n    handleChange = (e) => {\n        const content = e.target.value;\n        const translation = latinize(e.target.value);\n\n        document.querySelector('#Output').scrollTop = document.querySelector('#Output').scrollHeight;\n\n        this.setState({\n            content: content,\n            translation: translation\n        });\n    }\n\n    clear = (e) => {\n        document.querySelector('#Input').value = \"\";\n        document.querySelector('#Output').value = \"\";\n    }\n\n    upload = (e) => {\n\n    }\n\n    export = (e) => {\n        var blob = new Blob([this.state.translation], {type: \"text/plain;charset=utf-8\"});\n        saveAs(blob, \"translation.txt\");\n    }\n\n    onCopy = (e) => {\n        console.log(\"Here must be a message box\")\n    }\n\n    render() {\n        return (\n            <div className=\"Board\">\n                <div className=\"Board-Panel\">\n                    <div className=\"Board-Panel-Editor\">\n                        <textarea className=\"Board-Editor-TextArea\"\n                                  id=\"Input\"\n                                  placeholder=\"Введите сюда текст на кириллице\"\n                                  onChange={this.handleChange} />\n                    </div>\n                    <div className=\"Board-Panel-Separator\" />\n                    <div className=\"Board-Panel-Toolbar\">\n                        <div className=\"Board-Panel-ButtonGroup\">\n                            <button className=\"Board-Panel-Button\" onClick={this.clear}>\n                                <img className=\"Icon\" src={ClearIcon} />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"Board-Space\" />\n                <div className=\"Board-Panel\">\n                    <div className=\"Board-Panel-Editor\">\n                        <textarea className=\"Board-Editor-TextArea\"\n                                  id=\"Output\"\n                                  value={this.state.translation} />\n                    </div>\n                    <div className=\"Board-Panel-Separator\" />\n                    <div className=\"Board-Panel-Toolbar\">\n                        <div className=\"Board-Panel-ButtonGroup\">\n                            <button className=\"Board-Panel-Button\" onClick={this.export}>\n                                <img className=\"Icon\" src={ExportIcon} />\n                            </button>\n                            <CopyToClipboard onCopy={this.onCopy} text={this.state.translation}>\n                                <button className=\"Board-Panel-Button\">\n                                    <img className=\"Icon\" src={CopyIcon} />\n                                </button>\n                            </CopyToClipboard>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Board;\n","import \"./App.css\";\nimport logo from './media/logo.svg';\nimport Board from './Board';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"Background\" />\n            <img className=\"Logo\" src={logo} />\n            <div className=\"Header\">\n                <div className=\"Header-Content\">\n                    <h1>PEREVOD NA RUSSKUJU LATINICU</h1>\n                    <p>Perevodi legko russkij tekst s kirillicy na sovremennyj projekt latinicy, osnovannyj na rezuljtatax raboty komissii po razrabotke projekta o latinizacii russkogo alfavita vo glave s professorom N. F. Jakovlevym.</p>\n                </div>\n            </div>\n            <Board />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}